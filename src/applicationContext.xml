<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
           http://www.springframework.org/schema/tx 
     	   http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- 支持基于注解的配置方式，为@Autowired、@Resource、@PostConstruct、@PreDestroy注解提供支持 -->
	<context:component-scan base-package="Service"  annotation-config="true"></context:component-scan>
	<!--支持annotation实现aop，并允许为没有实现接口的类实现切面 -->
	<aop:aspectj-autoproxy proxy-target-class="true" /> 
 	 <!--配置properties-->	   
	<context:property-placeholder location="classpath:jdbc.properties"/>
		
	<!--创建数据源 -->
	<bean id="dataSource" 
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!--连接数据库的驱动类 -->
		<property name="driverClass" value="${driverClass}"></property>
		<!--连接数据库的url -->
		<property name="jdbcUrl" value="${jdbcUrl}"></property>
		<!--连接数据库的用户名 -->
		<property name="user" value="${user}"></property>
		<!--连接数据库的密码 -->
		<property name="password" value="${password}"></property>
	</bean>
	<!--sqlsession工厂 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--引用数据源 -->
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml"/>	
	</bean>
	
	<!-- 扫描mybatis的接口和同名的映射文件-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="Dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean> 
	
	<!--1.配置事务管理类  -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 2.定义事务增强，并且指定事务管理器是哪个 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="search*" read-only="true"/>
			<tx:method name="query*" read-only="true"/>
			<tx:method name="select*" read-only="true"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT"/>
		</tx:attributes>
	</tx:advice>
	<!-- 3 配置参与事务的类 -->
	<aop:config>
		<!--切入点-->
		<aop:pointcut expression="execution(* Service..*.*(..))" id="pointcut" />
		<!--切面-->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>
	<!--开启事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	
	
	
	
	
	
	
	
</beans>





